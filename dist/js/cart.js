function handleNavBar(t){document.querySelector(".nav-slide").classList.toggle("open"),t.preventDefault()}class Model{increaseOrDecreaseQuantityInCart(t,e){let r,a,o=this.getCartFromLs();this.getCartFromLs().forEach((t,o)=>{t.id==e&&(r=o,a=t)}),a.quantity=t,o.splice(r,1,a),localStorage.setItem("shoeprocart",JSON.stringify(o))}deleteItem(t){if("remove-svg"==t.target.className.baseVal||"svg-path"==t.target.className.baseVal||"remove"==t.target.className){let e,r=t.target.closest("div.item-flex"),a=model.getCartFromLs(),o=t.target.closest("button").dataset.id;model.getCartFromLs().forEach((t,r)=>{t.id==o&&(e=r)}),a.splice(e,1),localStorage.setItem("shoeprocart",JSON.stringify(a)),r.remove(),view.updateCart(),view.updateTotal(),model.getCartFromLs().length<1&&(document.querySelector(".proceed-to-checkout").disabled=!0,document.querySelector(".cart-inner").innerHTML='\n        <p class="no-item" >Oops! You have no item in your cart. Please visit the Home page or Product Page to add items to your cart</p>\n        ',document.querySelector(".proceed-to-checkout").style.backgroundColor="#a0aec0")}}doesCurrentItemExistInLs(){return!!localStorage.getItem("shoeproci")}doesProductsExistInLs(){return!!localStorage.getItem("shoeproprods")}doesLatestProductsExistInLs(){return!!localStorage.getItem("shoeprolp")}doesGisExistInLs(){return!!localStorage.getItem("shoeprogis")}doesCartExistInLs(){return!!localStorage.getItem("shoeprocart")}getProductsFromLs(){return JSON.parse(localStorage.getItem("shoeproprods"))}getCartFromLs(){return JSON.parse(localStorage.getItem("shoeprocart"))}getLatestProductsFromLs(){return JSON.parse(localStorage.getItem("shoeprolp"))}getGisFromLs(){return JSON.parse(localStorage.getItem("shoeprogis"))}addItemToLsCart(t){let e;this.doesCartExistInLs()?(e=this.getCartFromLs(),t={...t,quantity:1},e.push(t),localStorage.setItem("shoeprocart",JSON.stringify(e))):(e=[],t={...t,quantity:1},e.push(t),localStorage.setItem("shoeprocart",JSON.stringify(e)))}addProductsToLs(t){this.doesProductsExistInLs()||localStorage.setItem("shoeproprods",JSON.stringify(t))}addGisToLs(t){this.doesGisExistInLs()||localStorage.setItem("shoeprogis",JSON.stringify(t))}addLatestProductsToLs(t){this.doesLatestProductsExistInLs()||localStorage.setItem("shoeprolp",JSON.stringify(t))}async fetchItemsFromJson(){try{let t=await fetch("./products.json");t=await t.json();let e=t.items,r=e.map(callback.deconstructFetchResult),a=e.filter(callback.findLatestProducts);a=a.map(callback.deconstructProductsCat).sort(callback.sortProductsCat);let o=e.filter(callback.findGoodsInStock);return o=o.map(callback.deconstructProductsCat).sort(callback.sortProductsCat),{products:r,latestProducts:a,goodsInStock:o}}catch(t){console.log(t.message)}}createCartInLs(){this.doesCartExistInLs()||localStorage.setItem("shoeprocart",JSON.stringify([]))}createCurrentItemInLs(){this.doesCurrentItemExistInLs()||localStorage.setItem("shoeproci",JSON.stringify([]))}setCurrentItemInCart(t){if(model.doesCurrentItemExistInLs()){let e=JSON.parse(localStorage.getItem("shoeproci"));0==e.length?(e.push(t),localStorage.setItem("shoeproci",JSON.stringify(e))):(e.splice(0,1,t),localStorage.setItem("shoeproci",JSON.stringify(e)))}}}const model=new Model;class View{incrementOrDecrement(t){let e,r;"increment"==t.target.className?(r=t.target.closest("div.item-flex").dataset.id,e=Number(t.target.previousElementSibling.textContent),e+=1,model.increaseOrDecreaseQuantityInCart(e,r),t.target.previousElementSibling.textContent=e.toString(),view.updateTotal()):"decrement"==t.target.className&&(r=t.target.closest("div.item-flex").dataset.id,e=Number(t.target.nextElementSibling.textContent),e>1&&(e-=1),model.increaseOrDecreaseQuantityInCart(e,r),t.target.nextElementSibling.textContent=e.toString(),view.updateTotal());Number(document.querySelector(".quantity-value").textContent)}updateTotal(){let t=model.getCartFromLs(),e=0;model.doesCartExistInLs()&&0!=t.length?(t.forEach(t=>{let r=t.price*t.quantity;e+=r}),document.querySelector(".total-value").textContent=e.toLocaleString()):document.querySelector(".total-value").textContent="0"}displayCartItems(t){let e="";t.forEach(t=>{e+=`\n      <div data-id="${t.id}" class="item-flex">\n            <div class="item-image">\n              <img class="item-img" src="${t.url}" alt="">\n            </div>\n            <div class="item-info">\n              <p class="item-name">${t.title}</p>\n              <p class="item-price">${t.price.toLocaleString()}</p>\n              \n            </div>\n            <div class="item-remove">\n              <div class="item-quantity">\n                <button class="decrement">-</button>\n                <span class="quantity-value">${t.quantity}</span>\n                <button class="increment">+</button>\n              </div>\n              <button data-id="${t.id}" class="remove"><svg class="remove-svg" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path class="svg-path" fill="currentColor" d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"/></svg></button>\n            </div>\n          </div>\n      `}),0==model.getCartFromLs().length?(document.querySelector(".cart-inner").innerHTML='\n      <p class="no-item" >Oops! You have no item in your cart. Please visit the Home page or Product Page to add items to your cart</p>\n      ',document.querySelector(".proceed-to-checkout").style.backgroundColor="#a0aec0",document.querySelector(".proceed-to-checkout").disabled=!0):document.querySelector(".cart-inner").innerHTML=e}displayGoodsInStock(t){let e="";t.forEach(t=>{e+=`\n      <a href="./product.html" data-id="${t.id}" class="each-product">\n            <div class="img-container">\n              <img src="${t.url}" alt="">\n            </div>\n            <div class="content-container">\n              <p class="product-name">${t.title}</p>\n              <p class="product-price">Price: &nbsp;<span class="product-price-val" >${t.price.toLocaleString()}</span></p>\n              <p class="availability">Availability: &nbsp;<span class="av-value">${t.availability}</span></p>\n              <button data-id="${t.id}" >Add to cart</button>\n            </div>\n          </a>\n      `}),document.querySelector(".inner-container-gis").innerHTML=e}updateCart(){let t=model.getCartFromLs();document.querySelector(".cart-value").textContent=t.length}confirmIfItemInCart(){Array.from(document.querySelectorAll(".each-product button")).forEach(t=>{let e=t.dataset.id;model.getCartFromLs().find(t=>t.id==e)&&(t.textContent="In Cart",t.disabled=!0)})}showAddAlert(t){let e=`\n    <div class="alert-inner">\n      <h3 class="alert-header">Item Added to Cart</h3>\n      <div class="alert-img">\n        <img src="${t.url}" alt="">\n      </div>\n      <p class="alert-name">${t.title}</p>\n      <p class="alert-price">Price: <span class="alert-price-value">${t.price.toLocaleString()}</span></p>\n      <button class="alert-cs">Continue Shopping</button>\n      <a href="./cart.html" class="alert-gtc">Go To Cart</a>\n    </div>\n    `;document.querySelector(".alert").style.display="flex",document.querySelector(".alert").innerHTML=e}}const view=new View;class Controller{init(){document.querySelector(".current-year").textContent=(new Date).getFullYear(),document.querySelector(".menu").addEventListener("click",handleNavBar),document.querySelector(".cart-inner").addEventListener("click",model.deleteItem),document.querySelector(".cart-inner").addEventListener("click",view.incrementOrDecrement),document.querySelector(".close").addEventListener("click",t=>{document.querySelector(".nav-slide").classList.remove("open"),t.preventDefault()}),document.addEventListener("DOMContentLoaded",()=>{if(model.doesProductsExistInLs()){view.updateCart();let t=model.getCartFromLs();view.displayCartItems(t),view.updateTotal()}})}}const controller=new Controller;class Callback{deconstructFetchResult(t){let{title:e,price:r,brand:a,description:o,availability:s,category:n}=t.fields,{id:l}=t.sys,{url:c}=t.fields.image.fields.file;return{title:e,price:r,brand:a,description:o,availability:s,category:n,id:l,url:c}}deconstructProductsCat(t){let{title:e,price:r,brand:a,description:o,availability:s,category:n,attr:l}=t.fields,{id:c}=t.sys,{url:i}=t.fields.image.fields.file;return{title:e,price:r,brand:a,description:o,attr:l,availability:s,category:n,id:c,url:i}}findLatestProducts(t){return"latest products"===t.fields.attr}findGoodsInStock(t){return"goods in stock"===t.fields.attr}sortProductsCat(t,e){return t.price-e.price}}const callback=new Callback;controller.init();